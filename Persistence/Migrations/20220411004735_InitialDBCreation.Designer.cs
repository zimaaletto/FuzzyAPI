// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(FuzzyContext))]
    [Migration("20220411004735_InitialDBCreation")]
    partial class InitialDBCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.FuzzyLogicArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FuzzyLogicAreas");
                });

            modelBuilder.Entity("Domain.Entities.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FuzzyLogicAreaId")
                        .HasColumnType("int");

                    b.Property<string>("RuleValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuzzyLogicAreaId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Domain.Entities.Subset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TermId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TermId");

                    b.ToTable("Subsets");
                });

            modelBuilder.Entity("Domain.Entities.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FuzzyLogicAreaId")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuzzyLogicAreaId");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("Domain.Entities.Rule", b =>
                {
                    b.HasOne("Domain.Entities.FuzzyLogicArea", "FuzzyLogicArea")
                        .WithMany("Rules")
                        .HasForeignKey("FuzzyLogicAreaId");

                    b.Navigation("FuzzyLogicArea");
                });

            modelBuilder.Entity("Domain.Entities.Subset", b =>
                {
                    b.HasOne("Domain.Entities.Term", "Term")
                        .WithMany("Subsets")
                        .HasForeignKey("TermId");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("Domain.Entities.Term", b =>
                {
                    b.HasOne("Domain.Entities.FuzzyLogicArea", "FuzzyLogicArea")
                        .WithMany("Terms")
                        .HasForeignKey("FuzzyLogicAreaId");

                    b.Navigation("FuzzyLogicArea");
                });

            modelBuilder.Entity("Domain.Entities.FuzzyLogicArea", b =>
                {
                    b.Navigation("Rules");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("Domain.Entities.Term", b =>
                {
                    b.Navigation("Subsets");
                });
#pragma warning restore 612, 618
        }
    }
}
